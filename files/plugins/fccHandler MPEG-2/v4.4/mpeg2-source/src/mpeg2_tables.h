#ifndef _MPEG_TABLES_H_
#define _MPEG_TABLES_H_

#define MBF_INTRA		1
#define MBF_PATTERN		2
#define MBF_BACKWARD	4
#define MBF_FORWARD		8
#define MBF_QUANT		16

#define VLC_ERROR		255

typedef struct {
	unsigned char val;
	unsigned char len;
} VLCtab;

typedef struct {
	unsigned char run;
	unsigned char level;
	unsigned char len;
} DCTtab;


/******************************************************************
 *     Variable length codes for macroblock_address_increment     *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-1                    *
 ******************************************************************/


static const VLCtab MBAtab0[16] = {
	/* if (code >= 0x80) code >>= 6 */
	/* 00000 (N/A) */ {VLC_ERROR, 0},
	/* 00001 (N/A) */ {VLC_ERROR, 0},
	/* 00010...... */ { 7, 5},
	/* 00011...... */ { 6, 5},
	/* 0010....... */ { 5, 4},
	/* 0010....... */ { 5, 4},
	/* 0011....... */ { 4, 4},
	/* 0011....... */ { 4, 4},
	/* 010........ */ { 3, 3},
	/* 010........ */ { 3, 3},
	/* 010........ */ { 3, 3},
	/* 010........ */ { 3, 3},
	/* 011........ */ { 2, 3},
	/* 011........ */ { 2, 3},
	/* 011........ */ { 2, 3},
	/* 011........ */ { 2, 3}
};

static const VLCtab MBAtab1[104] = {
	/* if (code >= 0x18) code -= 0x18 */
	/* 00000011000 */ {33,11},
	/* 00000011001 */ {32,11},
	/* 00000011010 */ {31,11},
	/* 00000011011 */ {30,11},
	/* 00000011100 */ {29,11},
	/* 00000011101 */ {28,11},
	/* 00000011110 */ {27,11},
	/* 00000011111 */ {26,11},
	/* 00000100000 */ {25,11},
	/* 00000100001 */ {24,11},
	/* 00000100010 */ {23,11},
	/* 00000100011 */ {22,11},
	/* 0000010010. */ {21,10},
	/* 0000010010. */ {21,10},
	/* 0000010011. */ {20,10},
	/* 0000010011. */ {20,10},
	/* 0000010100. */ {19,10},
	/* 0000010100. */ {19,10},
	/* 0000010101. */ {18,10},
	/* 0000010101. */ {18,10},
	/* 0000010110. */ {17,10},
	/* 0000010110. */ {17,10},
	/* 0000010111. */ {16,10},
	/* 0000010111. */ {16,10},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000110... */ {15, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00000111... */ {14, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001000... */ {13, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001001... */ {12, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001010... */ {11, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 00001011... */ {10, 8},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000110.... */ { 9, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7},
	/* 0000111.... */ { 8, 7}
};


/*******************************************************************
 *     Variable length codes for macroblock_type in P-pictures     *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-3                     *
 *******************************************************************/

static const VLCtab PMBtab0[8] = {
	/*  N/A   */ {VLC_ERROR, 0},
	/* 001... */ {MBF_FORWARD, 3},
	/* 01.... */ {MBF_PATTERN, 2},
	/* 01.... */ {MBF_PATTERN, 2},
	/* 1..... */ {MBF_FORWARD | MBF_PATTERN, 1},
	/* 1..... */ {MBF_FORWARD | MBF_PATTERN, 1},
	/* 1..... */ {MBF_FORWARD | MBF_PATTERN, 1},
	/* 1..... */ {MBF_FORWARD | MBF_PATTERN, 1}
};

static const VLCtab PMBtab1[8] = {
	/* 000000 */ {VLC_ERROR, 0},
	/* 000001 */ {MBF_QUANT | MBF_INTRA, 6},
	/* 00001. */ {MBF_QUANT | MBF_PATTERN, 5},
	/* 00001. */ {MBF_QUANT | MBF_PATTERN, 5},
	/* 00010. */ {MBF_QUANT | MBF_FORWARD | MBF_PATTERN, 5},
	/* 00010. */ {MBF_QUANT | MBF_FORWARD | MBF_PATTERN, 5},
	/* 00011. */ {MBF_INTRA, 5},
	/* 00011. */ {MBF_INTRA, 5}
};


/*******************************************************************
 *     Variable length codes for macroblock_type in B-pictures     *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-4                     *
 *******************************************************************/

static const VLCtab BMBtab0[16] = {
	/*  N/A   */ {VLC_ERROR, 0},
	/*  N/A   */ {VLC_ERROR, 0},
	/* 0010.. */ {MBF_FORWARD, 4},
	/* 0011.. */ {MBF_FORWARD | MBF_PATTERN, 4},
	/* 010... */ {MBF_BACKWARD, 3},
	/* 010... */ {MBF_BACKWARD, 3},
	/* 011... */ {MBF_BACKWARD | MBF_PATTERN, 3},
	/* 011... */ {MBF_BACKWARD | MBF_PATTERN, 3},
	/* 10.... */ {MBF_FORWARD | MBF_BACKWARD, 2},
	/* 10.... */ {MBF_FORWARD | MBF_BACKWARD, 2},
	/* 10.... */ {MBF_FORWARD | MBF_BACKWARD, 2},
	/* 10.... */ {MBF_FORWARD | MBF_BACKWARD, 2},
	/* 11.... */ {MBF_FORWARD | MBF_BACKWARD | MBF_PATTERN, 2},
	/* 11.... */ {MBF_FORWARD | MBF_BACKWARD | MBF_PATTERN, 2},
	/* 11.... */ {MBF_FORWARD | MBF_BACKWARD | MBF_PATTERN, 2},
	/* 11.... */ {MBF_FORWARD | MBF_BACKWARD | MBF_PATTERN, 2}
};

static const VLCtab BMBtab1[8] = {
	/* 000000 */ {VLC_ERROR, 0},
	/* 000001 */ {MBF_QUANT | MBF_INTRA, 6},
	/* 000010 */ {MBF_QUANT | MBF_BACKWARD | MBF_PATTERN, 6},
	/* 000011 */ {MBF_QUANT | MBF_FORWARD | MBF_PATTERN, 6},
	/* 00010. */ {MBF_QUANT | MBF_FORWARD | MBF_BACKWARD | MBF_PATTERN, 5},
	/* 00010. */ {MBF_QUANT | MBF_FORWARD | MBF_BACKWARD | MBF_PATTERN, 5},
	/* 00011. */ {MBF_INTRA, 5},
	/* 00011. */ {MBF_INTRA, 5}
};


/*********************************************************
 *     Variable length codes for coded_block_pattern     *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-9           *
 *********************************************************/

static const VLCtab CBPtab0[32] = {
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/* 01000.... */ {62, 5},
	/* 01001.... */ { 2, 5},
	/* 01010.... */ {61, 5},
	/* 01011.... */ { 1, 5},
	/* 01100.... */ {56, 5},
	/* 01101.... */ {52, 5},
	/* 01110.... */ {44, 5},
	/* 01111.... */ {28, 5},
	/* 10000.... */ {40, 5},
	/* 10001.... */ {20, 5},
	/* 10010.... */ {48, 5},
	/* 10011.... */ {12, 5},
	/* 1010..... */ {32, 4},
	/* 1010..... */ {32, 4},
	/* 1011..... */ {16, 4},
	/* 1011..... */ {16, 4},
	/* 1100..... */ { 8, 4},
	/* 1100..... */ { 8, 4},
	/* 1101..... */ { 4, 4},
	/* 1101..... */ { 4, 4},
	/* 111...... */ {60, 3},
	/* 111...... */ {60, 3},
	/* 111...... */ {60, 3},
	/* 111...... */ {60, 3}
};

static const VLCtab CBPtab1[64] = {
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/*  N/A      */ {VLC_ERROR, 0},
	/* 00000100. */ {58, 8},
	/* 00000101. */ {54, 8},
	/* 00000110. */ {46, 8},
	/* 00000111. */ {30, 8},
	/* 00001000. */ {57, 8},
	/* 00001001. */ {53, 8},
	/* 00001010. */ {45, 8},
	/* 00001011. */ {29, 8},
	/* 00001100. */ {38, 8},
	/* 00001101. */ {26, 8},
	/* 00001110. */ {37, 8},
	/* 00001111. */ {25, 8},
	/* 00010000. */ {43, 8},
	/* 00010001. */ {23, 8},
	/* 00010010. */ {51, 8},
	/* 00010011. */ {15, 8},
	/* 00010100. */ {42, 8},
	/* 00010101. */ {22, 8},
	/* 00010110. */ {50, 8},
	/* 00010111. */ {14, 8},
	/* 00011000. */ {41, 8},
	/* 00011001. */ {21, 8},
	/* 00011010. */ {49, 8},
	/* 00011011. */ {13, 8},
	/* 00011100. */ {35, 8},
	/* 00011101. */ {19, 8},
	/* 00011110. */ {11, 8},
	/* 00011111. */ { 7, 8},
	/* 0010000.. */ {34, 7},
	/* 0010000.. */ {34, 7},
	/* 0010001.. */ {18, 7},
	/* 0010001.. */ {18, 7},
	/* 0010010.. */ {10, 7},
	/* 0010010.. */ {10, 7},
	/* 0010011.. */ { 6, 7},
	/* 0010011.. */ { 6, 7},
	/* 0010100.. */ {33, 7},
	/* 0010100.. */ {33, 7},
	/* 0010101.. */ {17, 7},
	/* 0010101.. */ {17, 7},
	/* 0010110.. */ { 9, 7},
	/* 0010110.. */ { 9, 7},
	/* 0010111.. */ { 5, 7},
	/* 0010111.. */ { 5, 7},
	/* 001100... */ {63, 6},
	/* 001100... */ {63, 6},
	/* 001100... */ {63, 6},
	/* 001100... */ {63, 6},
	/* 001101... */ { 3, 6},
	/* 001101... */ { 3, 6},
	/* 001101... */ { 3, 6},
	/* 001101... */ { 3, 6},
	/* 001110... */ {36, 6},
	/* 001110... */ {36, 6},
	/* 001110... */ {36, 6},
	/* 001110... */ {36, 6},
	/* 001111... */ {24, 6},
	/* 001111... */ {24, 6},
	/* 001111... */ {24, 6},
	/* 001111... */ {24, 6}
};

static const VLCtab CBPtab2[8] = {
	/* 000000000 */ {VLC_ERROR, 0},
	/* 000000001 */ { 0, 9},
	/* 000000010 */ {39, 9},
	/* 000000011 */ {27, 9},
	/* 000000100 */ {59, 9},
	/* 000000101 */ {55, 9},
	/* 000000110 */ {47, 9},
	/* 000000111 */ {31, 9}
};


/****************************************************
 *     Variable length codes for motion_code        *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-10     *
 ****************************************************/

static const VLCtab MVtab0[8] = {
	/*  N/A       */ {VLC_ERROR, 0},
	/* 0001...... */ { 3, 3},
	/* 001....... */ { 2, 2},
	/* 001....... */ { 2, 2},
	/* 01........ */ { 1, 1},
	/* 01........ */ { 1, 1},
	/* 01........ */ { 1, 1},
	/* 01........ */ { 1, 1}
};
static const VLCtab MVtab1[8] = {
	/*  N/A       */ {VLC_ERROR, 0},
	/*  N/A       */ {VLC_ERROR, 0},
	/*  N/A       */ {VLC_ERROR, 0},
	/* 0000011... */ { 7, 6},
	/* 0000100... */ { 6, 6},
	/* 0000101... */ { 5, 6},
	/* 000011.... */ { 4, 5},
	/* 000011.... */ { 4, 5}
};
static const VLCtab MVtab2[12] = {
	/* 0000001100 */ {16, 9},
	/* 0000001101 */ {15, 9},
	/* 0000001110 */ {14, 9},
	/* 0000001111 */ {13, 9},
	/* 0000010000 */ {12, 9},
	/* 0000010001 */ {11, 9},
	/* 000001001. */ {10, 8},
	/* 000001001. */ {10, 8},
	/* 000001010. */ { 9, 8},
	/* 000001010. */ { 9, 8},
	/* 000001011. */ { 8, 8},
	/* 000001011. */ { 8, 8}
};


/***********************************************************
 *     Variable length codes for dct_dc_size_luminance     *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-12            *
 ***********************************************************/

static const VLCtab DClumtab0[32] = {
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 00....... */ { 1, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 01....... */ { 2, 2},
	/* 100...... */ { 0, 3},
	/* 100...... */ { 0, 3},
	/* 100...... */ { 0, 3},
	/* 100...... */ { 0, 3},
	/* 101...... */ { 3, 3},
	/* 101...... */ { 3, 3},
	/* 101...... */ { 3, 3},
	/* 101...... */ { 3, 3},
	/* 110...... */ { 4, 3},
	/* 110...... */ { 4, 3},
	/* 110...... */ { 4, 3},
	/* 110...... */ { 4, 3},
	/* 1110..... */ { 5, 4},
	/* 1110..... */ { 5, 4},
	/* 11110.... */ { 6, 5},
	/*  N/A      */ {VLC_ERROR, 0}
};

static const VLCtab DClumtab1[16] = {
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 111110... */ { 7, 6},
	/* 1111110.. */ { 8, 7},
	/* 1111110.. */ { 8, 7},
	/* 1111110.. */ { 8, 7},
	/* 1111110.. */ { 8, 7},
	/* 11111110. */ { 9, 8},
	/* 11111110. */ { 9, 8},
	/* 111111110 */ {10, 9},
	/* 111111111 */ {11, 9}
};


/*************************************************************
 *     Variable length codes for dct_dc_size_chrominance     *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-13              *
 *************************************************************/

static const VLCtab DCchromtab0[32] = {
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 00........ */ { 0, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 01........ */ { 1, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 10........ */ { 2, 2},
	/* 110....... */ { 3, 3},
	/* 110....... */ { 3, 3},
	/* 110....... */ { 3, 3},
	/* 110....... */ { 3, 3},
	/* 1110...... */ { 4, 4},
	/* 1110...... */ { 4, 4},
	/* 11110..... */ { 5, 5},
	/*  N/A       */ {VLC_ERROR, 0}
};

static const VLCtab DCchromtab1[32] = {
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 111110.... */ { 6, 6},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 1111110... */ { 7, 7},
	/* 11111110.. */ { 8, 8},
	/* 11111110.. */ { 8, 8},
	/* 11111110.. */ { 8, 8},
	/* 11111110.. */ { 8, 8},
	/* 111111110. */ { 9, 9},
	/* 111111110. */ { 9, 9},
	/* 1111111110 */ {10,10},
	/* 1111111111 */ {11,10}
};


/*************************************************************
 *     DCT coefficients Table zero and one                   *
 *     cf. ISO/IEC 13818-2, Annex B, Table B-14 and B-15     *
 *************************************************************/

static const DCTtab DCTtabfirst[12] = {
	{0,2,4}, {2,1,4}, {1,1,3}, {1,1,3},
	{0,1,1}, {0,1,1}, {0,1,1}, {0,1,1},
	{0,1,1}, {0,1,1}, {0,1,1}, {0,1,1}
};

static const DCTtab DCTtabnext[12] = {
	{0,2,4},  {2,1,4},  {1,1,3},  {1,1,3},
	{64,0,2}, {64,0,2}, {64,0,2}, {64,0,2},	// EOB
	{0,1,2},  {0,1,2},  {0,1,2},  {0,1,2}
};

static const DCTtab DCTtab0[60] = {
	{65,0,6}, {65,0,6}, {65,0,6}, {65,0,6},	// Escape
	{2,2,7}, {2,2,7}, {9,1,7}, {9,1,7},
	{0,4,7}, {0,4,7}, {8,1,7}, {8,1,7},
	{7,1,6}, {7,1,6}, {7,1,6}, {7,1,6},
	{6,1,6}, {6,1,6}, {6,1,6}, {6,1,6},
	{1,2,6}, {1,2,6}, {1,2,6}, {1,2,6},
	{5,1,6}, {5,1,6}, {5,1,6}, {5,1,6},
	{13,1,8}, {0,6,8}, {12,1,8}, {11,1,8},
	{3,2,8}, {1,3,8}, {0,5,8}, {10,1,8},
	{0,3,5}, {0,3,5}, {0,3,5}, {0,3,5},
	{0,3,5}, {0,3,5}, {0,3,5}, {0,3,5},
	{4,1,5}, {4,1,5}, {4,1,5}, {4,1,5},
	{4,1,5}, {4,1,5}, {4,1,5}, {4,1,5},
	{3,1,5}, {3,1,5}, {3,1,5}, {3,1,5},
	{3,1,5}, {3,1,5}, {3,1,5}, {3,1,5}
};

static const DCTtab DCTtab0a[252] = {
	{65,0,6}, {65,0,6}, {65,0,6}, {65,0,6},	// Escape
	{7,1,7}, {7,1,7}, {8,1,7}, {8,1,7},
	{6,1,7}, {6,1,7}, {2,2,7}, {2,2,7},
	{0,7,6}, {0,7,6}, {0,7,6}, {0,7,6},
	{0,6,6}, {0,6,6}, {0,6,6}, {0,6,6},
	{4,1,6}, {4,1,6}, {4,1,6}, {4,1,6},
	{5,1,6}, {5,1,6}, {5,1,6}, {5,1,6},
	{1,5,8}, {11,1,8}, {0,11,8}, {0,10,8},
	{13,1,8}, {12,1,8}, {3,2,8}, {1,4,8},
	{2,1,5}, {2,1,5}, {2,1,5}, {2,1,5},
	{2,1,5}, {2,1,5}, {2,1,5}, {2,1,5},
	{1,2,5}, {1,2,5}, {1,2,5}, {1,2,5},
	{1,2,5}, {1,2,5}, {1,2,5}, {1,2,5},
	{3,1,5}, {3,1,5}, {3,1,5}, {3,1,5},
	{3,1,5}, {3,1,5}, {3,1,5}, {3,1,5},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{1,1,3}, {1,1,3}, {1,1,3}, {1,1,3},
	{64,0,4}, {64,0,4}, {64,0,4}, {64,0,4}, // EOB
	{64,0,4}, {64,0,4}, {64,0,4}, {64,0,4},
	{64,0,4}, {64,0,4}, {64,0,4}, {64,0,4},
	{64,0,4}, {64,0,4}, {64,0,4}, {64,0,4},
	{0,3,4}, {0,3,4}, {0,3,4}, {0,3,4},
	{0,3,4}, {0,3,4}, {0,3,4}, {0,3,4},
	{0,3,4}, {0,3,4}, {0,3,4}, {0,3,4},
	{0,3,4}, {0,3,4}, {0,3,4}, {0,3,4},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,1,2}, {0,1,2}, {0,1,2}, {0,1,2},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,2,3}, {0,2,3}, {0,2,3}, {0,2,3},
	{0,4,5}, {0,4,5}, {0,4,5}, {0,4,5},
	{0,4,5}, {0,4,5}, {0,4,5}, {0,4,5},
	{0,5,5}, {0,5,5}, {0,5,5}, {0,5,5},
	{0,5,5}, {0,5,5}, {0,5,5}, {0,5,5},
	{9,1,7}, {9,1,7}, {1,3,7}, {1,3,7},
	{10,1,7}, {10,1,7}, {0,8,7}, {0,8,7},
	{0,9,7}, {0,9,7}, {0,12,8}, {0,13,8},
	{2,3,8}, {4,2,8}, {0,14,8}, {0,15,8}
};

static const DCTtab DCTtab1[8] = {
	{16,1,10}, {5,2,10}, {0,7,10}, {2,3,10},
	{1,4,10}, {15,1,10}, {14,1,10}, {4,2,10}
};

static const DCTtab DCTtab1a[8] = {
	{5,2,9}, {5,2,9}, {14,1,9}, {14,1,9},
	{2,4,10}, {16,1,10}, {15,1,9}, {15,1,9}
};

static const DCTtab DCTtab2[16] = {
	{0,11,12}, {8,2,12}, {4,3,12}, {0,10,12},
	{2,4,12}, {7,2,12}, {21,1,12}, {20,1,12},
	{0,9,12}, {19,1,12}, {18,1,12}, {1,5,12},
	{3,3,12}, {0,8,12}, {6,2,12}, {17,1,12}
};

static const DCTtab DCTtab3[16] = {
	{10,2,13}, {9,2,13}, {5,3,13}, {3,4,13},
	{2,5,13}, {1,7,13}, {1,6,13}, {0,15,13},
	{0,14,13}, {0,13,13}, {0,12,13}, {26,1,13},
	{25,1,13}, {24,1,13}, {23,1,13}, {22,1,13}
};

static const DCTtab DCTtab4[16] = {
	{0,31,14}, {0,30,14}, {0,29,14}, {0,28,14},
	{0,27,14}, {0,26,14}, {0,25,14}, {0,24,14},
	{0,23,14}, {0,22,14}, {0,21,14}, {0,20,14},
	{0,19,14}, {0,18,14}, {0,17,14}, {0,16,14}
};

static const DCTtab DCTtab5[16] = {
	{0,40,15}, {0,39,15}, {0,38,15}, {0,37,15},
	{0,36,15}, {0,35,15}, {0,34,15}, {0,33,15},
	{0,32,15}, {1,14,15}, {1,13,15}, {1,12,15},
	{1,11,15}, {1,10,15}, {1,9,15}, {1,8,15}
};

static const DCTtab DCTtab6[16] = {
	{1,18,16}, {1,17,16}, {1,16,16}, {1,15,16},
	{6,3,16}, {16,2,16}, {15,2,16}, {14,2,16},
	{13,2,16}, {12,2,16}, {11,2,16}, {31,1,16},
	{30,1,16}, {29,1,16}, {28,1,16}, {27,1,16}
};


/***********************************************
 *     The default matrix for intra blocks     *
 *     cf. ISO/IEC 13818-2, section 6.3.7      *
 ***********************************************/

static const unsigned char intramatrix_default[64] = {
	 8, 16, 19, 22, 26, 27, 29, 34,
	16, 16, 22, 24, 27, 29, 34, 37,
	19, 22, 26, 27, 29, 34, 34, 38,
	22, 22, 26, 27, 29, 34, 37, 40,
	22, 26, 27, 29, 32, 35, 40, 48,
	26, 27, 29, 32, 35, 40, 48, 58,
	26, 27, 29, 34, 38, 46, 56, 69,
	27, 29, 35, 38, 46, 56, 69, 83
};


/***********************************************
 *     Inverse scan patterns                   *
 *     cf. ISO/IEC 13818-2, section 7.3        *
 ***********************************************/

static const unsigned char zigzag[2][64] = {
	{	// Zig-Zag scan pattern
		 0, 1, 8,16, 9, 2, 3,10,
		17,24,32,25,18,11, 4, 5,
		12,19,26,33,40,48,41,34,
		27,20,13, 6, 7,14,21,28,
		35,42,49,56,57,50,43,36,
		29,22,15,23,30,37,44,51,
		58,59,52,45,38,31,39,46,
		53,60,61,54,47,55,62,63
	},
	{	// Alternate scan pattern
		 0, 8,16,24, 1, 9, 2,10,
		17,25,32,40,48,56,57,49,
		41,33,26,18, 3,11, 4,12,
		19,27,34,42,50,58,35,43,
		51,59,20,28, 5,13, 6,14,
		21,29,36,44,52,60,37,45,
		53,61,22,30, 7,15,23,31,
		38,46,54,62,39,47,55,63
	}
};


/***********************************************
 *     Non-linear quantiser_scale              *
 *     cf. ISO/IEC 13818-2, section 7.4.2.2    *
 ***********************************************/

static const unsigned char non_linear[32] = {
	 0,  1,  2,  3,  4,  5,  6,  7,  8, 10, 12, 14, 16, 18, 20, 22,
	24, 28, 32, 36, 40, 44, 48, 52, 56, 64, 72, 80, 88, 96,104,112
};


#endif	// _MPEG_TABLES_H_
